{
  "evaluations": [
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T20:57:02.912162+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T20:57:02.912781+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T20:57:02.913405+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T20:57:02.913529+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100596.md",
      "timestamp": "2025-06-28T20:57:02.913589+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 08:49",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T20:58:29.323181+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T20:58:29.323772+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T20:58:29.324373+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T20:58:29.324494+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100596.md",
      "timestamp": "2025-06-28T20:58:29.324552+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 08:49",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T21:44:05.499165+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T21:44:05.500075+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T21:44:05.500968+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T21:44:05.501137+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751111909.md",
      "timestamp": "2025-06-28T21:44:05.501329+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 20:58",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T22:09:08.101474+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T22:09:08.102384+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-28T22:09:08.102679+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T22:09:08.103479+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T22:09:08.103653+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    }
  ],
  "rule_updates": [],
  "quality_trends": {}
}