{
  "evaluations": [
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T20:57:02.912162+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T20:57:02.912781+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T20:57:02.913405+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T20:57:02.913529+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100596.md",
      "timestamp": "2025-06-28T20:57:02.913589+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 08:49",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T20:58:29.323181+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T20:58:29.323772+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T20:58:29.324373+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T20:58:29.324494+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100596.md",
      "timestamp": "2025-06-28T20:58:29.324552+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 08:49",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T21:44:05.499165+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T21:44:05.500075+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T21:44:05.500968+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T21:44:05.501137+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751111909.md",
      "timestamp": "2025-06-28T21:44:05.501329+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 20:58",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T22:09:08.101474+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T22:09:08.102384+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-28T22:09:08.102679+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T22:09:08.103479+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T22:09:08.103653+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-28T22:37:12.152729+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T22:37:12.153531+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T22:37:12.154413+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T22:37:12.155277+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751100716.md",
      "timestamp": "2025-06-28T22:37:12.155442+09:00",
      "metadata": {
        "title": "ベクトルデータベースの選び方",
        "date": "2025-06-28 08:51",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T23:02:33.613334+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-28T23:02:33.613655+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-28T23:02:33.613875+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T23:02:33.614671+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T23:02:33.615530+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-28T23:34:51.782372+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-28T23:34:51.783203+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-28T23:34:51.783508+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-28T23:34:51.783713+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-28T23:34:51.784498+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T00:02:48.693035+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T00:02:48.693253+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T00:02:48.694092+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-29T00:02:48.694989+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751106973.md",
      "timestamp": "2025-06-29T00:02:48.695868+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践：ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-28 19:36",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "source": "https://github.com/argoproj/argo-cd",
        "difficulty": "上級",
        "reading_time": "20分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-29T00:34:04.959482+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T00:34:04.959793+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T00:34:04.960000+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T00:34:04.960795+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751122968.md",
      "timestamp": "2025-06-29T00:34:04.961071+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-29 00:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "difficulty": "中級",
        "reading_time": "20分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T01:03:00.091981+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T01:03:00.092193+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T01:03:00.093016+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751122968.md",
      "timestamp": "2025-06-29T01:03:00.093297+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-29 00:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "difficulty": "中級",
        "reading_time": "20分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751095972.md",
      "timestamp": "2025-06-29T01:03:00.094322+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識：Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-28 16:32",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "source": "https://github.com/apache/spark",
        "difficulty": "中級",
        "reading_time": "15分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T01:37:55.448737+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T01:37:55.448947+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T01:37:55.449760+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T01:37:55.450070+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751122968.md",
      "timestamp": "2025-06-29T01:37:55.450265+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-29 00:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "difficulty": "中級",
        "reading_time": "20分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T02:02:25.547313+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T02:02:25.547525+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T02:02:25.548340+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T02:02:25.548619+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128675.md",
      "timestamp": "2025-06-29T02:02:25.548811+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 01:37",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T02:34:21.245323+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T02:34:21.245534+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T02:34:21.246346+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T02:34:21.246627+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751130145.md",
      "timestamp": "2025-06-29T02:34:21.246840+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-29 02:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "difficulty": "中級",
        "reading_time": "20分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T03:03:14.633943+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T03:03:14.634156+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T03:03:14.634981+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T03:03:14.635268+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751132061.md",
      "timestamp": "2025-06-29T03:03:14.635480+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 02:34",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T03:39:12.413764+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T03:39:12.413978+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T03:39:12.414792+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T03:39:12.415070+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751133794.md",
      "timestamp": "2025-06-29T03:39:12.415259+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-29 03:03",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "difficulty": "中級",
        "reading_time": "20分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T04:02:26.842239+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T04:02:26.842472+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T04:02:26.842772+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T04:02:26.843584+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T04:02:26.843860+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T04:32:17.633134+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T04:32:17.633341+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T04:32:17.633551+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T04:32:17.634351+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T04:32:17.634621+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T05:03:11.272293+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T05:03:11.272503+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T05:03:11.272737+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T05:03:11.273522+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T05:03:11.273805+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T05:34:32.922077+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T05:34:32.922289+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T05:34:32.922522+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T05:34:32.923309+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T05:34:32.923598+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T06:02:30.828429+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T06:02:30.828638+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T06:02:30.828844+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T06:02:30.829667+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T06:02:30.829954+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T06:33:30.272244+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T06:33:30.272476+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T06:33:30.272689+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T06:33:30.273485+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T06:33:30.273755+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T07:02:35.452117+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T07:02:35.452321+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T07:02:35.452529+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T07:02:35.453331+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T07:02:35.453610+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T07:35:32.853994+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T07:35:32.854203+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T07:35:32.854420+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T07:35:32.855219+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T07:35:32.855492+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T08:03:02.024569+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T08:03:02.024777+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T08:03:02.024983+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T08:03:02.025799+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T08:03:02.026084+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T08:33:49.908343+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T08:33:49.908570+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T08:33:49.908780+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T08:33:49.909578+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T08:33:49.909847+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T09:13:55.044738+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T09:13:55.044947+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T09:13:55.045160+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T09:13:55.045969+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T09:13:55.046245+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T09:47:28.773276+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T09:47:28.773486+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T09:47:28.773720+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T09:47:28.774517+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T09:47:28.774813+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T10:31:10.781616+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T10:31:10.781823+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T10:31:10.782030+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T10:31:10.782857+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T10:31:10.783144+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T11:41:50.603737+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T11:41:50.603972+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T11:41:50.604193+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T11:41:50.604429+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T11:41:50.605224+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T12:30:40.961030+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T12:30:40.961242+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T12:30:40.961442+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T12:30:40.961645+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T12:30:40.962423+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T13:13:06.514468+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T13:13:06.514675+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T13:13:06.514882+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T13:13:06.515102+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T13:13:06.515887+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T13:42:48.790007+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T13:42:48.790218+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T13:42:48.790425+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T13:42:48.791235+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T13:42:48.791507+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T14:05:47.794684+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T14:05:47.794892+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T14:05:47.795134+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T14:05:47.795933+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T14:05:47.796234+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T14:37:24.056567+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T14:37:24.056772+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T14:37:24.056983+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T14:37:24.057804+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T14:37:24.058082+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T15:03:48.859038+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T15:03:48.859259+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T15:03:48.859481+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T15:03:48.860344+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T15:03:48.860659+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T15:39:48.052694+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751114645.md",
      "timestamp": "2025-06-29T15:39:48.052906+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド:BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 21:44",
        "category": "セキュリティ",
        "tags": "セキュリティ, プライバシー, 認証, 暗号化",
        "difficulty": "上級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751117832.md",
      "timestamp": "2025-06-29T15:39:48.053114+09:00",
      "metadata": {
        "title": "Next.js 15完全攻略:App Router×Server Components×Streamingで作る爆速Webアプリ",
        "date": "2025-06-28 22:37",
        "category": "Web技術",
        "tags": "Web, フロントエンド, バックエンド, API",
        "difficulty": "中級",
        "reading_time": "25分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751108540.md",
      "timestamp": "2025-06-29T15:39:48.053947+09:00",
      "metadata": {
        "title": "【2025年最新】AIエージェントが変える開発現場 - AutoGenとLangChainの実践比較",
        "date": "2025-06-28 20:02",
        "category": "AI開発",
        "tags": "AI, 機械学習, 深層学習, 開発",
        "source": "https://github.com/microsoft/autogen",
        "difficulty": "中級",
        "reading_time": "8分"
      },
      "scores": {
        "technical_accuracy": 15.0,
        "readability": 20.0,
        "practicality": 22.0,
        "originality": 23.0
      },
      "total_score": 80.0,
      "strengths": [
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (22.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例"
      ],
      "weaknesses": [
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126580.md",
      "timestamp": "2025-06-29T15:39:48.054226+09:00",
      "metadata": {
        "title": "Kubernetes×GitOps実践:ArgoCDとFluxで実現する完全自動化インフラ",
        "date": "2025-06-29 01:03",
        "category": "インフラ",
        "tags": "クラウド, DevOps, インフラ, 自動化",
        "difficulty": "上級",
        "reading_time": "35分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 16.0
      },
      "total_score": 82.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T16:03:02.074089+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T16:03:02.074262+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T16:03:02.074361+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T16:03:02.074483+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T16:03:02.074580+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T16:33:15.621652+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T16:33:15.621818+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T16:33:15.621913+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T16:33:15.622057+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-29T16:33:15.622157+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T17:03:13.600434+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T17:03:13.600619+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T17:03:13.600719+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T17:03:13.600844+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T17:03:13.600944+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T17:37:22.445771+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T17:37:22.446056+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T17:37:22.446165+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T17:37:22.446254+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T17:37:22.446372+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T18:02:59.630023+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T18:02:59.630306+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T18:02:59.630433+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T18:02:59.630526+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T18:02:59.630646+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T18:34:11.642639+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T18:34:11.642919+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T18:34:11.643029+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T18:34:11.643118+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T18:34:11.643238+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T19:03:16.879667+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T19:03:16.879967+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T19:03:16.880076+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T19:03:16.880167+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T19:03:16.880287+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T19:37:30.376344+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T19:37:30.376634+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T19:37:30.376768+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T19:37:30.376863+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T19:37:30.376988+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T20:02:24.759383+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T20:02:24.759550+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T20:02:24.759712+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T20:02:24.759808+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-29T20:02:24.759933+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T20:32:07.008680+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T20:32:07.008904+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T20:32:07.009004+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T20:32:07.009130+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T20:32:07.009234+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T21:04:12.344548+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T21:04:12.344718+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T21:04:12.344812+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T21:04:12.344933+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-29T21:04:12.345023+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T21:44:11.640638+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T21:44:11.640815+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T21:44:11.640945+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T21:44:11.641043+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-29T21:44:11.641187+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T22:09:46.956638+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T22:09:46.956833+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T22:09:46.956933+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-29T22:09:46.957056+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/test_article_1751132710.md",
      "timestamp": "2025-06-29T22:09:46.957131+09:00",
      "metadata": {},
      "scores": {
        "technical_accuracy": 12.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 52.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T22:37:57.009668+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T22:37:57.009868+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T22:37:57.009969+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-29T22:37:57.010093+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127970.md",
      "timestamp": "2025-06-29T22:37:57.011707+09:00",
      "metadata": {
        "title": "【2025年最新】GraphQL vs REST API: 次世代Web開発での最適解とは",
        "date": "2025-06-29 01:26",
        "category": "Web技術",
        "tags": "GraphQL, REST API, Web開発, パフォーマンス",
        "difficulty": "中級",
        "reading_time": "20分",
        "production_time": "0.09秒"
      },
      "scores": {
        "technical_accuracy": 22.0,
        "readability": 23.0,
        "practicality": 20.0,
        "originality": 20.0
      },
      "total_score": 85.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.0/25)",
        "readability: 優秀なスコア (23.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "originality: 優秀なスコア (20.0/25)",
        "豊富なコード例",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T23:02:34.722604+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T23:02:34.722803+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-29T23:02:34.722905+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-29T23:02:34.723032+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/test_article_1751132710.md",
      "timestamp": "2025-06-29T23:02:34.723112+09:00",
      "metadata": {},
      "scores": {
        "technical_accuracy": 12.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 52.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-29T23:35:04.481931+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-29T23:35:04.482220+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-29T23:35:04.482330+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-29T23:35:04.482416+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-29T23:35:04.482534+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T00:02:32.788225+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T00:02:32.788389+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T00:02:32.788484+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T00:02:32.788610+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T00:02:32.788735+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T00:34:32.775321+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/test_article_1751132710.md",
      "timestamp": "2025-06-30T00:34:32.775465+09:00",
      "metadata": {},
      "scores": {
        "technical_accuracy": 12.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 52.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T00:34:32.775597+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T00:34:32.775713+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T00:34:32.775800+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T01:02:55.230617+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T01:02:55.230788+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T01:02:55.230920+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T01:02:55.231015+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-30T01:02:55.231162+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T01:37:54.379622+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T01:37:54.379915+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T01:37:54.380024+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T01:37:54.380110+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751116762.md",
      "timestamp": "2025-06-30T01:37:54.383502+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド：BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 22:19",
        "category": "セキュリティ",
        "tags": "ゼロトラスト, BeyondCorp, 認証, アクセス制御",
        "difficulty": "上級",
        "reading_time": "30分",
        "production_time": "0.0秒"
      },
      "scores": {
        "technical_accuracy": 19.0,
        "readability": 23.0,
        "practicality": 20.0,
        "originality": 23.0
      },
      "total_score": 85.0,
      "strengths": [
        "readability: 優秀なスコア (23.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T02:02:31.472257+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T02:02:31.472571+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T02:02:31.472679+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T02:02:31.472767+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T02:02:31.472888+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T02:34:47.546601+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T02:34:47.546768+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T02:34:47.546900+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T02:34:47.547011+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-30T02:34:47.547139+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T03:03:18.221863+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T03:03:18.222061+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T03:03:18.222194+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-30T03:03:18.222324+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128017.md",
      "timestamp": "2025-06-30T03:03:18.223941+09:00",
      "metadata": {
        "title": "Terraform×Ansible×AWS: Infrastructure as Code完全自動化パイプライン",
        "date": "2025-06-29 01:26",
        "category": "インフラ",
        "tags": "Terraform, Ansible, AWS, IaC",
        "difficulty": "上級",
        "reading_time": "30分",
        "production_time": "0.08秒"
      },
      "scores": {
        "technical_accuracy": 22.0,
        "readability": 20.0,
        "practicality": 20.0,
        "originality": 23.0
      },
      "total_score": 85.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.0/25)",
        "readability: 優秀なスコア (20.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T03:38:37.663881+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T03:38:37.664049+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T03:38:37.664143+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T03:38:37.664264+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T03:38:37.664357+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/test_article_1751132710.md",
      "timestamp": "2025-06-30T04:02:21.354986+09:00",
      "metadata": {},
      "scores": {
        "technical_accuracy": 12.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 52.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T04:02:21.355267+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T04:02:21.355377+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T04:02:21.355464+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T04:02:21.355588+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T04:32:07.595811+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T04:32:07.595984+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T04:32:07.596079+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T04:32:07.596201+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T04:32:07.596295+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T05:03:02.908589+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T05:03:02.908757+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T05:03:02.908886+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T05:03:02.908979+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-30T05:03:02.909100+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T05:34:48.605286+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T05:34:48.605453+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T05:34:48.605550+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T05:34:48.605693+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T05:34:48.605791+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T06:02:27.567505+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T06:02:27.567678+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T06:02:27.567774+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T06:02:27.567896+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T06:02:27.567989+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T06:33:28.691286+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T06:33:28.691455+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T06:33:28.691550+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T06:33:28.691671+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T06:33:28.691762+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T07:02:54.932209+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T07:02:54.932518+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T07:02:54.932667+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T07:02:54.932764+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T07:02:54.932886+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T07:35:48.513713+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T07:35:48.513881+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T07:35:48.514002+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T07:35:48.514132+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T07:35:48.514230+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T08:03:04.014861+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T08:03:04.015144+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T08:03:04.015274+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T08:03:04.015362+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T08:03:04.015479+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T08:33:51.047893+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T08:33:51.048057+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T08:33:51.048152+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T08:33:51.048292+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T08:33:51.048389+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T09:13:04.679788+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T09:13:04.680068+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T09:13:04.680174+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T09:13:04.680266+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751116762.md",
      "timestamp": "2025-06-30T09:13:04.683634+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド：BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 22:19",
        "category": "セキュリティ",
        "tags": "ゼロトラスト, BeyondCorp, 認証, アクセス制御",
        "difficulty": "上級",
        "reading_time": "30分",
        "production_time": "0.0秒"
      },
      "scores": {
        "technical_accuracy": 19.0,
        "readability": 23.0,
        "practicality": 20.0,
        "originality": 23.0
      },
      "total_score": 85.0,
      "strengths": [
        "readability: 優秀なスコア (23.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T09:47:19.254469+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T09:47:19.254637+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T09:47:19.254731+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T09:47:19.254852+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T09:47:19.254950+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T10:31:12.784516+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T10:31:12.784702+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T10:31:12.784802+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T10:31:12.784923+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T10:31:12.785017+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T11:37:56.181299+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T11:37:56.181465+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T11:37:56.181559+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T11:37:56.181681+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T11:37:56.181783+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T12:29:29.653919+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T12:29:29.654206+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T12:29:29.654338+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T12:29:29.654432+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T12:29:29.654552+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T12:52:18.943689+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T12:52:18.943862+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T12:52:18.943958+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T12:52:18.944085+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T12:52:18.944176+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T13:11:48.295514+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T13:11:48.295686+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T13:11:48.295804+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T13:11:48.295930+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T13:11:48.296024+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T13:41:51.706089+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T13:41:51.706258+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T13:41:51.706355+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T13:41:51.706481+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T13:41:51.706576+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T14:04:42.448349+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T14:04:42.448520+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T14:04:42.448619+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T14:04:42.448741+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T14:04:42.448834+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T14:37:24.615119+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T14:37:24.615410+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T14:37:24.615520+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T14:37:24.615607+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T14:37:24.615744+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T15:04:17.699451+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T15:04:17.699739+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T15:04:17.699850+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T15:04:17.699937+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T15:04:17.700055+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T15:41:53.750772+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T15:41:53.750944+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T15:41:53.751038+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T15:41:53.751159+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751126389.md",
      "timestamp": "2025-06-30T15:41:53.751258+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 15:59",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T16:04:09.852461+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T16:04:09.852629+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T16:04:09.852760+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T16:04:09.852852+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128054_2.md",
      "timestamp": "2025-06-30T16:04:09.852976+09:00",
      "metadata": {
        "title": "Claude Code SDKで始める自律開発",
        "date": "2025-06-28 16:27",
        "tags": "Claude, SDK, Autonomous Development",
        "source": "https://b.hatena.ne.jp/hotentry/it"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 12.0,
        "originality": 10.0
      },
      "total_score": 56.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (12.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T16:35:08.835681+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T16:35:08.835972+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T16:35:08.836100+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T16:35:08.836190+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T16:35:08.836314+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T17:04:10.501561+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T17:04:10.501727+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T17:04:10.501820+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128053_1.md",
      "timestamp": "2025-06-30T17:04:10.501939+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 16:27",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751128175.md",
      "timestamp": "2025-06-30T17:04:10.502028+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:29",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751125994_1.md",
      "timestamp": "2025-06-30T17:40:10.460444+09:00",
      "metadata": {
        "title": "マルチエージェントシステムの実装ガイド",
        "date": "2025-06-28 15:53",
        "tags": "Architecture, System Design, AI Agents",
        "source": "https://zenn.dev/"
      },
      "scores": {
        "technical_accuracy": 22.5,
        "readability": 12.0,
        "practicality": 10.0,
        "originality": 10.0
      },
      "total_score": 54.5,
      "strengths": [
        "technical_accuracy: 優秀なスコア (22.5/25)"
      ],
      "weaknesses": [
        "readability: 改善が必要 (12.0/25)",
        "practicality: 改善が必要 (10.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751135952.md",
      "timestamp": "2025-06-30T17:40:10.460761+09:00",
      "metadata": {
        "title": "大規模データ処理の新常識:Apache Spark vs Databricks vs Snowflake徹底比較",
        "date": "2025-06-29 03:39",
        "category": "データサイエンス",
        "tags": "データ分析, ビッグデータ, 統計, 可視化",
        "difficulty": "中級",
        "reading_time": "30分",
        "evaluation_aware": "true"
      },
      "scores": {
        "technical_accuracy": 21.0,
        "readability": 25.0,
        "practicality": 20.0,
        "originality": 13.0
      },
      "total_score": 79.0,
      "strengths": [
        "technical_accuracy: 優秀なスコア (21.0/25)",
        "readability: 優秀なスコア (25.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [
        "originality: 改善が必要 (13.0/25)"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127590.md",
      "timestamp": "2025-06-30T17:40:10.460881+09:00",
      "metadata": {
        "title": "LangChainを使ったAIアプリケーション開発",
        "date": "2025-06-28 16:19",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751127350.md",
      "timestamp": "2025-06-30T17:40:10.460969+09:00",
      "metadata": {
        "title": "プロンプトエンジニアリングの最新テクニック",
        "date": "2025-06-28 16:15",
        "tags": "AI, Technology, Tutorial",
        "source": "https://qiita.com/tags/ai"
      },
      "scores": {
        "technical_accuracy": 13.0,
        "readability": 15.0,
        "practicality": 15.0,
        "originality": 10.0
      },
      "total_score": 53.0,
      "strengths": [],
      "weaknesses": [
        "technical_accuracy: 改善が必要 (13.0/25)",
        "originality: 改善が必要 (10.0/25)",
        "AIの思考プロセスセクションが不足"
      ],
      "improvement_suggestions": [
        "より多くのコード例を追加",
        "記事冒頭にAIの思考プロセスを追加",
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    },
    {
      "article_path": "posts/article_1751116762.md",
      "timestamp": "2025-06-30T17:40:10.464308+09:00",
      "metadata": {
        "title": "ゼロトラストセキュリティ実装ガイド：BeyondCorpモデルで作る次世代認証基盤",
        "date": "2025-06-28 22:19",
        "category": "セキュリティ",
        "tags": "ゼロトラスト, BeyondCorp, 認証, アクセス制御",
        "difficulty": "上級",
        "reading_time": "30分",
        "production_time": "0.0秒"
      },
      "scores": {
        "technical_accuracy": 19.0,
        "readability": 23.0,
        "practicality": 20.0,
        "originality": 23.0
      },
      "total_score": 85.0,
      "strengths": [
        "readability: 優秀なスコア (23.0/25)",
        "practicality: 優秀なスコア (20.0/25)",
        "originality: 優秀なスコア (23.0/25)",
        "豊富なコード例",
        "AIの思考プロセスが明確"
      ],
      "weaknesses": [],
      "improvement_suggestions": [
        "文章とコードのバランスを調整（目標: 70:30）"
      ]
    }
  ],
  "rule_updates": [],
  "quality_trends": {}
}